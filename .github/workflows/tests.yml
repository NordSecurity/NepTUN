name: Tests
on: [workflow_call]
permissions: {}

jobs:
  tests:
    strategy:
        matrix:
          include:
          - os: ubuntu-24.04
            packages: ""
          - os: macos-14
            packages: ""
          - os: windows-2022
            packages: -p neptun
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
    - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
    - if: matrix.os == 'ubuntu-24.04'
      run: sudo apt-get install -y libpcap-dev
    - name: Install hack
      run: cargo +stable install --git https://github.com/taiki-e/cargo-hack.git cargo-hack --rev c0b517b9eefa27cdaf27cca5f1b186c00ef1af47 --locked
    - run: cargo hack test --each-feature ${{ matrix.packages }}

  integration-tests:
    strategy:
      matrix:
        os: [ ubuntu-24.04, macos-14 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
    - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
    - if: matrix.os == 'ubuntu-24.04'
      run: sudo apt-get install -y libpcap-dev
    - run: CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER='sudo -E' cargo test -- --ignored

  crypto-bench:
    strategy:
      matrix:
        os: [ ubuntu-24.04, macos-14, windows-2022 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
    - uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # v1.0.6
    - run: cargo bench -p neptun --no-run

  performance-tests:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      with:
        fetch-depth: 0
    - run: docker build -t neptun-runner:0.0.1 .
    - run: cargo xtask perf --base main

  xray-tests:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      - name: Setup
        working-directory: xray
        run: |
          sudo apt update
          sudo apt install -y wireguard wireguard-go libpcap-dev
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install
      - name: Execute xray
        working-directory: xray
        run: |
          pipenv run python run.py --wg native --ascii --save-output --test-type crypto --count 10000
          pipenv run python run.py --wg native --ascii --save-output --test-type plaintext --count 10000
          pipenv run python run.py --wg native --ascii --save-output --test-type bidir --count 10000
          pipenv run python run.py --wg neptun --ascii --save-output --test-type crypto --count 10000 --disable-drop-privileges
          pipenv run python run.py --wg neptun --ascii --save-output --test-type plaintext --count 10000 --disable-drop-privileges
          pipenv run python run.py --wg neptun --ascii --save-output --test-type bidir --count 10000 --disable-drop-privileges
      - name: Results
        working-directory: xray/results
        run: |
          for file in *.txt; do
            echo "----- $file -----"
            cat "$file"
            echo ""
          done
